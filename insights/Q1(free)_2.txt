The paper proposes a novel approach to sentiment analysis specifically tailored for software engineering (SE) texts, which differ significantly from typical social media or movie review texts in terms of sentiment expression. Hereâ€™s a summary of the methodology outlined in the paper for analyzing sentiment in SE texts:
### 1. **Understanding the Unique Expression of Sentiments in SE Texts**
   - **Indirect and Dispersed Sentiments**: SE texts often express sentiments indirectly and in a dispersed manner. Authors typically describe issues in detail before expressing their sentiments, which makes it challenging for traditional sentiment analysis tools to accurately capture the sentiment.
   - **Complex Sentence Structures**: SE texts tend to have more complex sentence structures, which necessitates a different approach to sentiment analysis compared to simpler social texts.
### 2. **Proposed Approach: SESSION**
   The proposed method, named SESSION (SentEnce-Structure-based SentIment analysis for sOftware eNgineering), consists of three main steps:
#### Step 1: Preprocessing and Segmenting SE Texts
   - **Text Preprocessing**: The input SE text is preprocessed to filter out technical jargon and irrelevant content. This includes removing greetings, technical terms, and certain punctuation.
   - **Segmentation**: The text is segmented into sentences and further into clauses using natural language processing (NLP) tools like Stanford CoreNLP. Each word is tagged with its part of speech (POS).
#### Step 2: Filtering Sentiment-Expressing Clauses
   - **Filter Rules**: A set of predefined rules is applied to identify which clauses are likely to express sentiments. These rules include:
     - **Direct Sentiment Pattern**: Identifies clauses with exclamation marks, emojis, interjections, or imperative sentences with high sentiment density.
     - **Decorated Sentiment Pattern**: Looks for sentimental words modified by adverbs.
     - **"About Me" Pattern**: Focuses on first-person expressions of sentiment.
     - **Judgement Pattern**: Identifies clauses that make judgments about objects or situations.
   - Clauses that do not match any of these patterns are ignored in the sentiment analysis.
#### Step 3: Adjusting Sentiment Analysis Results
   - **Adjust Rules**: After identifying potentially sentimental clauses, the approach applies adjustment rules to enhance the sentiment analysis results:
     - **Subjunctive Mood Recognition**: Sentiments in subjunctive clauses are ignored as they do not express real sentiments.
     - **Polysemous Words Handling**: The meaning of polysemous words is determined based on their context and POS tags to avoid misclassification.
     - **Negation Handling**: A refined approach to negation is used to neutralize sentiments correctly, ensuring that negation words do not lead to incorrect sentiment polarity.
### 3. **Evaluation and Results**
   - The proposed approach is evaluated against several datasets (e.g., Stack Overflow discussions, app reviews, JIRA comments) and compared with baseline sentiment analysis tools (SentiStrength, SentiStrength-SE, and Senti4SD).
   - The results show that SESSION outperforms these baseline tools in terms of overall accuracy, precision, and recall, particularly in identifying neutral sentiments, which are prevalent in SE texts.
### Conclusion
The SESSION approach leverages the unique characteristics of sentiment expression in SE texts by focusing on sentence structures and applying specific filtering and adjustment rules. This methodology allows for more accurate sentiment analysis in the context of software engineering, addressing the limitations of existing sentiment analysis tools that are not designed for this domain.