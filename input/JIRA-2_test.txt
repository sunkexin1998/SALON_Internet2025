Patch that uses the SearcherManager(Directory,...) ctor instead of the SM(IndexWriter,...) ctor in the case of opening a suggester over an already built index.  Committing shortly.
I went ahead and worked on a patch to have it for 6.5.1 in time.
I'm using:  Apache Maven 3.0.4 (r1232337; 2012-01-17 09:44:56+0100)
My bad, I was looking at the old repo location. --Keith   On Wed, Dec 21, 2011 at 1:51 PM, Olivier Lamy (Commented) (JIRA) <
I'm guessing the source of this is <subscribe>rat-dev-unsubscribe@incubator.apache.org</subscribe> from the pom.xml.
Here is a patch.
Committed r907529 , thanks!
I'm not seeing this error on Windows + Cygwin   I'm on Maven 2.0.7 rather than 2.0.8 in the original  report
Looks like 6.5.0 isn't a valid version yet. Easy enough to add, but if I do so, would I be doing the right thing?  I see Jim already set the version to 6.5, but FYI Shawn Heisey, historically people have excluded the trailing ".0" in minor release labels here on JIRA.
gilberto.andrade@A37710:~/dev/netbeans-config/reca$ mvn --version Apache Maven 3.0.3 (r1075438; 2011-02-28 14:31:09-0300) Maven home: /home/gilberto.andrade/bin/maven Java version: 1.7.0_07, vendor: Oracle Corporation Java home: /usr/java/jdk1.7.0_07/jre Default locale: en_US, platform encoding: UTF-8 OS name: "linux", version: "3.4.11-2.16-desktop", arch: "amd64", family: "unix"  Can you access this URL https://repository.apache.org/content/repositories/snapshots/org/sonatype/plugins/maven-metadata.xml ?
I have unziped the smapi1.0-war-exec.jar file and in it I see the smapi-1.0.war file. I think it is finding the war, other wise I would be seeing the zip file exception that I saw when running it from the wrong directory.   Here is how I have the plugin configured in the pom: <plugin>         <groupId>org.apache.tomcat.maven</groupId>         <artifactId>tomcat7-maven-plugin</artifactId>         <version>2.0-SNAPSHOT</version>         <executions>           <execution>             <id>tomcat-run</id>             <goals>               <goal>exec-war-only</goal>             </goals>             <phase>package</phase>             <configuration>               <path>/smapi-1.0</path>             </configuration>           </execution>         </executions>       </plugin>
Hi Adrien, ramBytesUsed is only ~500KB. Thanks for the info regarding leaking index readers, I'll try to track those down.
Thanks chillon.m!
Having such warnings now too on JDK 8 with rat 0.10:  Java:   java version "1.8.0" Java(TM) SE Runtime Environment (build 1.8.0-b132) Java HotSpot(TM) 64-Bit Server VM (build 25.0-b70, mixed mode)    Maven:   Apache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T18:37:52+01:00) Maven home: /usr/local/share/java/maven Java version: 1.8.0, vendor: Oracle Corporation Java home: /Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre Default locale: en_US, platform encoding: UTF-8 OS name: "mac os x", version: "10.9.2", arch: "x86_64", family: "mac"    Log:   Warning:  org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser: Property 'http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit' is not recognized. Compiler warnings:   WARNING:  'org.apache.xerces.jaxp.SAXParserImpl: Property 'http://javax.xml.XMLConstants/property/accessExternalDTD' is not recognized.' Warning:  org.apache.xerces.parsers.SAXParser: Feature 'http://javax.xml.XMLConstants/feature/secure-processing' is not recognized. Warning:  org.apache.xerces.parsers.SAXParser: Property 'http://javax.xml.XMLConstants/property/accessExternalDTD' is not recognized. Warning:  org.apache.xerces.parsers.SAXParser: Property 'http://www.oracle.com/xml/jaxp/properties/entityExpansionLimit' is not recognized.
please provide a sample project to reproduce.
Ok. I started to scratch the spec at SOLR-10144. Everybody are welcome. Meanwhile, I tried to reproduce this exact failure to come up with more informative message. But it seems like it's impossible - recently redesigned BlockJoinQuery ignores children behind the last parent in segment.
+1  What on earth did this comment mean?   This makes rewritten query equal the original, so that user does not have to .rewrite() their query before searching:    Why would a user have to (in the past) manually rewrite their query before searching ...
1. Cleaned up formatting  2. Added a @see to PaswordUtil pointing back to Jetty Source  3. Will apply cleanly after your patch to MTOMCAT-109
that must be fixed with 2.0-SNAPSHOT. Can you try it ? see http://tomcat.apache.org/maven-plugin-2.0-SNAPSHOT/snapshot-test.html
Looks good! Thanks for adding the comment about the crazyness - I see no better way to do this (without casting)! It is also good that you left the clearAttributes(), because without it, the "extra" attributes maybe added by TokenFilters, would not be cleared and then the Asserting* tests would fail.
Yes, I saw that when I published the release.  Actually I'd prefer a download page like the Commons projects have and it is on my TODO list (I need to do the same for log4net) - I just need to investigate how it is done in Commons.  Do you have any pointers beyond "read the Commons parent POM"?
Github user Nakomis commented on a diff in the pull request:      https://github.com/apache/incubator-brooklyn/pull/49#discussion_r14706576      â€” Diff: pom.xml â€”     @@ -678,6 +662,64 @@                          </execution>                      </executions>                  </plugin>     +            <!-- Needed for command-line access, e.g mvn apache-rat:rat and mvn apache-rat:check -->     +            <plugin>     +              <groupId>org.apache.rat</groupId>     +              <artifactId>apache-rat-plugin</artifactId>     +              <version>0.10</version>     +              <executions>     +                <execution>     +                  <phase>verify</phase>     +                  <goals>     +                    <goal>check</goal>     +                  </goals>     +                </execution>      +              </executions>     +              <configuration>     +                <!--     +                     If you wish to override this list in the component (child) pom, ensure you use     +                         <excludes combine.children="merge">     +                     so that the child pom entries replace the parent entries     +                 -->     +                <excludes combine.children="append">     +                  <!-- git and IDE project files -->     +                  <!-- see https://issues.apache.org/jira/browse/RAT-107 -->     +                  <exclude>*/.git/*</exclude>     +                  <exclude>**/.gitignore</exclude>     +                  <exclude>*/.idea/*</exclude>     +                  <exclude>*/.iml</exclude>     +                  <exclude>*/.classpath/*</exclude>     +                  <exclude>**/.project</exclude>     +                  <exclude>*/.settings/*</exclude>     +                  <exclude>*/.log</exclude>     +                  <exclude>*/brooklyn.log.*</exclude>     +                  <!-- files not requiring licence -->     +                  <exclude>ignored/**</exclude>     +                  <exclude>LICENSE.md</exclude>     +                  <exclude>**/MANIFEST.MF</exclude>     +                  <exclude>*/test-output/*</exclude>     +                  <exclude>*/.pem.pub</exclude>     +                  <exclude>*/.svg</exclude>     +                  <exclude>*/.crt</exclude>     +                  <exclude>*/.csr</exclude>     +                  <exclude>*/.key</exclude>     +                  <exclude>*/.key.org</exclude>     +                  <exclude>*/.psd</exclude>     +                  <exclude>*/.json</exclude>     â€” End diff â€“      I excluded json as it doesn't support comments, I had a quick look at json files in jClouds (just as an example of an Apache TLP) and their json files don't include the apache header
Can you provide a justification for why it won't be fixed? I think this SHOULD be fixed.
Here's a patch where each Term in the SynonymQuery is wrapped as SpanTermQuery in a SpanOrQuery, which is then added to the allSpanClauses array.  If there is just one term in the SynonymQuery, it is added as a SpanTermQuery directly.  This seems more appropriate, but don't take my word for it.
Fixed in r1545788.
patch not used. Implemented with a more easy solution. SNAPSHOT deployed to http://repository.apache.org/content/groups/snapshots-group/  reopen if you still have issue.
please provide more infos.
I've tested this patch on Mac OSX 10.6.8, Fedora Core 16, and Redhat Linux 5.4  It handles, httpPort not being set so only https starts up it adds 3 options to the startup -keyAlias -clientAuth It checks for the 6 -Djavax.net.ssl properties for setting up key and trust stores  I also added PasswordUtil to allow the passwords to be obfuscated (a security requirement for some systems is no passwords in clear text ... I know obfuscation is like closing your front door and hoping know one uses the peep hole).  I've confirmed function as best I can with and without http turned on and with and without clientAuth.  It appears to be working correctly.
Integrated in TomcatMavenPlugin-mvn3.x #120 (See https://builds.apache.org/job/TomcatMavenPlugin-mvn3.x/120/)     MTOMCAT-134 Empty additionalClasspathDir causes NPE in RunMojo.java Submitted by John Meyer. (Revision 1309560)       Result = FAILURE olamy : http://svn.apache.org/viewvc/?view=rev&rev=1309560 Files :    /tomcat/maven-plugin/trunk/tomcat6-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat6/RunMojo.java  /tomcat/maven-plugin/trunk/tomcat7-maven-plugin/src/main/java/org/apache/tomcat/maven/plugin/tomcat7/run/RunMojo.java
can you paste running mvn -e ?
Applied. Many thanks for the patch.
It would be helpful to show the active include and exclude configuration on the report as well; this should be after any defaults have been applied. [The defaults may change between releases, so it is helpful to have the active settings documented.]  For excludes of directory trees, it probably does not make sense to list individual files (there will generally be too many). It's really only for the more specific excludes where the file names might be useful - the exclude may be too general.
Good - the plexus dependency has been updated for this release, which is where the standard   I found printing the excludes useful for debugging, but yes, listing the ignored resources sounds useful. I'll see if it would be easy and safe to add before the release.
Github user richardcloudsoft commented on a diff in the pull request:      https://github.com/apache/incubator-brooklyn/pull/49#discussion_r14706993      â€” Diff: pom.xml â€”     @@ -678,6 +662,64 @@                          </execution>                      </executions>                  </plugin>     +            <!-- Needed for command-line access, e.g mvn apache-rat:rat and mvn apache-rat:check -->     +            <plugin>     +              <groupId>org.apache.rat</groupId>     +              <artifactId>apache-rat-plugin</artifactId>     +              <version>0.10</version>     +              <executions>     +                <execution>     +                  <phase>verify</phase>     +                  <goals>     +                    <goal>check</goal>     +                  </goals>     +                </execution>      +              </executions>     +              <configuration>     +                <!--     +                     If you wish to override this list in the component (child) pom, ensure you use     +                         <excludes combine.children="merge">     +                     so that the child pom entries replace the parent entries     +                 -->     +                <excludes combine.children="append">     +                  <!-- git and IDE project files -->     +                  <!-- see https://issues.apache.org/jira/browse/RAT-107 -->     +                  <exclude>*/.git/*</exclude>     +                  <exclude>**/.gitignore</exclude>     +                  <exclude>*/.idea/*</exclude>     +                  <exclude>*/.iml</exclude>     +                  <exclude>*/.classpath/*</exclude>     +                  <exclude>**/.project</exclude>     +                  <exclude>*/.settings/*</exclude>     +                  <exclude>*/.log</exclude>     +                  <exclude>*/brooklyn.log.*</exclude>     +                  <!-- files not requiring licence -->     +                  <exclude>ignored/**</exclude>     +                  <exclude>LICENSE.md</exclude>     +                  <exclude>**/MANIFEST.MF</exclude>     +                  <exclude>*/test-output/*</exclude>     +                  <exclude>*/.pem.pub</exclude>     +                  <exclude>*/.svg</exclude>     +                  <exclude>*/.crt</exclude>     +                  <exclude>*/.csr</exclude>     +                  <exclude>*/.key</exclude>     +                  <exclude>*/.key.org</exclude>     +                  <exclude>*/.psd</exclude>     +                  <exclude>*/.json</exclude>     â€” End diff â€“      s/jClouds/jclouds/ `</pedantic>`
Thanks Nathan!
I suspect it might be a JVM issue with nothing that we can do to fix it, but couldn't find any other JIRAs reporting the same thing so it made sense to create one.
NOTE it include RAT-120 and RAT-121. Could you guys ask for a git mirroring ? I will be easy for more for providing different patches.
Fixed in r1545767.
If I could do that it would be useful too.  But not as easy for you as just exposing an expression.
