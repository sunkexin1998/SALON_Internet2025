In software engineering texts, sentiment expression often involves subtle emotions, irony, or sarcasm, especially in negative messages. Positive messages tend to use clear, positive words, while negative sentiments are harder to detect due to their nuanced nature. Neutral messages are common, often lacking explicit emotional content.

To handle sentiment analysis in software engineering texts, the paper suggests using robust methodologies and established emotion models, such as Shaver's model, to reduce subjectivity. It recommends leveraging tools like SentiStrengthSE and Senti4SD, which perform well for positive messages but struggle with negative ones. Preprocessing steps to remove noise (e.g., links, mentions) are crucial. Additionally, considering the context of messages and expert agreement levels can improve accuracy. Future work should explore advanced techniques like transformers and LLMs to better capture subtle emotions, irony, and sarcasm prevalent in software engineering communication.