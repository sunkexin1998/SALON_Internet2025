We should distinguish between technical descriptive text and sentiment expressive text because off-the-shelf sentiment analysis tools, trained on non-technical domains, often misclassify technical jargon and problem reports as emotionally negative. This misclassification occurs because these tools fail to account for the domain-specific context of technical language in software engineering.

To distinguish between technical descriptive text and sentiment expressive text, the paper suggests using a classifier specifically trained for software engineering contexts, such as **Senti4SD**. This classifier leverages **lexicon-based features** (e.g., sentiment scores from domain-specific lexicons), **keyword-based features** (e.g., n-grams, emoticons), and **semantic features** (e.g., word embeddings trained on technical texts). By combining these features, the classifier can better identify neutral technical descriptions (e.g., bug reports) and separate them from emotionally loaded text (e.g., frustration or gratitude), reducing misclassifications of neutral posts as negative.