Sentiment expression in software engineering texts differs from general texts (e.g., movie reviews or tweets) due to the presence of code snippets, domain-specific terminologies, and emojis. These elements make sentiment analysis in software engineering more complex, requiring specialized tools and datasets tailored to the domain.

To handle software engineering texts for sentiment analysis, the paper suggests preprocessing steps: removing non-English characters, expanding contractions, deleting code snippets, URLs, and quotations, removing stop words, processing emoticons and punctuation, marking negations, and performing word tokenization and stemming. These steps reduce noise and extract meaningful features. Feature vectorization methods like TF-IDF and Doc2vec are used to convert text into vectors. Supervised machine learning algorithms (e.g., Gradient Boosting Tree) are applied for sentiment classification, and rule-based methods are used for entity recognition to identify sentiment targets like 'Person' or 'Project'.